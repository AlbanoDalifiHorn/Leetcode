class Solution:
    def minOperations(self, nums: List[int]) -> int:
        count = 0
        for i in range(len(nums) - 2):
            if nums[i] == 0:
                count += 1
                nums[i] = 1
                if nums[i + 1] == 0:
                    nums[i + 1] = 1
                    if nums[i + 2] == 0:
                        nums[i + 2] = 1
                    else:
                        nums[i + 2] = 0
                else:
                    nums[i + 1] = 0
                    if nums[i + 2] == 0:
                        nums[i + 2] = 1
                    else:
                        nums[i + 2] = 0
        return count if nums.count(1) == len(nums) else -1

# beats 96% 
# this approach has a time complexity of O(n)
# Idea is just going through the array and if nums[i] == 0, we have to swap all 3 consecutive elements
